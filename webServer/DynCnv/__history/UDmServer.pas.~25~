unit UDmServer;

interface

uses
  System.SysUtils, System.Classes, uDWDatamodule, uDWAbout, uRESTDWServerEvents,
  uDWJSONObject, uDWConsts, System.JSON;

type
  TDMServer = class(TServerMethodDataModule)
    api: TDWServerEvents;
    procedure apiEventsverReplyEventByType(var Params: TDWParams;
      var Result: string; const RequestType: TRequestType;
      var StatusCode: Integer; RequestHeader: TStringList);
    procedure apiEventsdyncnvReplyEventByType(var Params: TDWParams;
      var Result: string; const RequestType: TRequestType;
      var StatusCode: Integer; RequestHeader: TStringList);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DMServer: TDMServer;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

uses Main, UDbClasses;

{$R *.dfm}

procedure TDMServer.apiEventsdyncnvReplyEventByType(var Params: TDWParams;
  var Result: string; const RequestType: TRequestType; var StatusCode: Integer;
  RequestHeader: TStringList);
begin
  inherited;
  FMain.AddLogToMemo(RequestHeader.Text);
    DM.JsonCnv.RefreshData;
    Result := DM.JsonCnv.GetData.ToString;

end;

procedure TDMServer.apiEventsverReplyEventByType(var Params: TDWParams;
  var Result: string; const RequestType: TRequestType; var StatusCode: Integer;
  RequestHeader: TStringList);
begin
  inherited;
  FMain.AddLogToMemo(RequestHeader.Text);
  Result := '{"version": "' + FMain.GetVersionDate + '"}';
end;

end.
